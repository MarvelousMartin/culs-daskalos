<?xml version="1.0"?>

<st-source>
<time-stamp>From VisualWorksÂ® NonCommercial, 7.4.1 of May 30, 2006 on April 25, 2020 at 2:10:24 pm</time-stamp>


<class>
<name>Letiste</name>
<environment>Smalltalk</environment>
<super>DaskalosDataObject</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>nazev kodIATA runwayDictionary </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Letiste class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#nazev -&gt; Core.String); add: (#kodIATA -&gt; Core.String); add: (#runwayDictionary -&gt; Core.Object); yourself)</body>
</methods>

<methods>
<class-id>Letiste class</class-id> <category>initialize-release</category>

<body package="DaskalosUserClasses" selector="nazev:kodIATA:">nazev: jmenoLetiste kodIATA: kod
	"zadani noveho letiste"
	| letiste|
	
	letiste := self new.
      letiste nazev: jmenoLetiste.
      letiste kodIATA: kod.

	^ letiste</body>

<body package="DaskalosUserClasses" selector="seznamRunwayNaLetistich">seznamRunwayNaLetistich
	"comment stating purpose of message"

	| runwayDictionary|

	runwayDictionary := Dictionary new.
	runwayDictionary at: #PRG
		put: ((Array new: 3)
				at: 1 put: '06/24';
				at: 2 put: '13/31';
				at: 3 put: '04/22';
				yourself).	"Letiste Praha"
	runwayDictionary at: #CDG
		put: ((Array new: 4)
				at: 1 put: '09/27L';
				at: 2 put: '09/27R';
				at: 3 put: '08/26L';
				at: 4 put: '08/26R';
				yourself).	"Charles de Gaulle Paris"
	runwayDictionary at: #LHR
		put: ((Array new: 2)
				at: 1 put: '09/27L';
				at: 2 put: '09/27R';
				yourself).	"London Heathrow"
	runwayDictionary at: #LAX
		put: ((Array new: 4)
				at: 1 put: '24/06L';
				at: 2 put: '24/06R';
				at: 3 put: '25/07L';
				at: 4 put: '25/07R';
				yourself).	"Los Angeles Airport"
	runwayDictionary at: #ATL
		put: ((Array new: 5)
				at: 1 put: '08/26L';
				at: 2 put: '08/26R';
				at: 3 put: '09/27L';
				at: 4 put: '09/27R';
				at: 5 put: '10/28';
				yourself).	"Atlanta Hartsfield-Jackson"
	runwayDictionary at: #JFK
		put: ((Array new: 4)
				at: 1 put: '04/22L';
				at: 2 put: '04/22R';
				at: 3 put: '13/31L';
				at: 4 put: '13/31R';
				yourself).	"John F. Kennedy New York Airport"
	^runwayDictionary</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Letiste</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="kodIATA">kodIATA
"generated by Daskalos"

     ^kodIATA</body>

<body package="DaskalosUserClasses" selector="kodIATA:">kodIATA: anObject
"generated by Daskalos"

     kodIATA := (self checkValue: anObject forVariable: #kodIATA)</body>

<body package="DaskalosUserClasses" selector="nazev">nazev
"generated by Daskalos"

     ^nazev</body>

<body package="DaskalosUserClasses" selector="nazev:">nazev: anObject
"generated by Daskalos"

     nazev := (self checkValue: anObject forVariable: #nazev)</body>
</methods>

<methods>
<class-id>Letiste</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize
"generated by Daskalos"

     super initialize.
     nazev := nil.
     kodIATA := nil.
     runwayDictionary := nil.
</body>
</methods>

<methods>
<class-id>Letiste</class-id> <category>other methods</category>

<body package="DaskalosUserClasses" selector="gate">gate
	"Vypise prirazeny gate na letisti"

	| random temp |
	random := Random new.
	temp := random next * 49 + 1.
	^temp asInteger</body>

<body package="DaskalosUserClasses" selector="runway">runway
	"comment stating purpose of message"

	| random temp array |
	random := Random new.
	array := (self class seznamRunwayNaLetistich) at: self kodIATA.
	temp := (random next * array size + 1) asInteger.
	^array at: temp</body>
</methods>


<class>
<name>Osoba</name>
<environment>Smalltalk</environment>
<super>DaskalosDataObject</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>jmeno prijmeni datumNarozeni </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Osoba class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#jmeno -&gt; Core.String); add: (#datumNarozeni -&gt; Core.Date); add: (#prijmeni -&gt; Core.String); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Osoba</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="datumNarozeni">datumNarozeni
"generated by Daskalos"

     ^datumNarozeni</body>

<body package="DaskalosUserClasses" selector="datumNarozeni:">datumNarozeni: anObject
"generated by Daskalos"

     datumNarozeni := (self checkValue: anObject forVariable: #datumNarozeni)</body>

<body package="DaskalosUserClasses" selector="jmeno">jmeno
"generated by Daskalos"

     ^jmeno</body>

<body package="DaskalosUserClasses" selector="jmeno:">jmeno: anObject
"generated by Daskalos"

     jmeno := (self checkValue: anObject forVariable: #jmeno)</body>

<body package="DaskalosUserClasses" selector="prijmeni">prijmeni
"generated by Daskalos"

     ^prijmeni</body>

<body package="DaskalosUserClasses" selector="prijmeni:">prijmeni: anObject
"generated by Daskalos"

     prijmeni := (self checkValue: anObject forVariable: #prijmeni)</body>
</methods>

<methods>
<class-id>Osoba</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize
"generated by Daskalos"

     super initialize.
     jmeno := nil.
     prijmeni := nil.
     datumNarozeni := nil.
</body>
</methods>


<class>
<name>Pilot</name>
<environment>Smalltalk</environment>
<super>Osoba</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>cisloLicence licenceOd hodnost </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Pilot class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#licenceOd -&gt; Core.Date); add: (#cisloLicence -&gt; Core.Number); add: (#hodnost -&gt; Core.Object); yourself)</body>
</methods>

<methods>
<class-id>Pilot class</class-id> <category>initialize-release</category>

<body package="DaskalosUserClasses" selector="jmeno:prijmeni:cisloLicence:licenceOd:">jmeno: jmeno prijmeni: prijmeni cisloLicence: cisloLicence licenceOd: datum
	| pilot |
	pilot := self new.
	pilot
		jmeno: jmeno;
		prijmeni: prijmeni;
		cisloLicence: cisloLicence;
            licenceOd: datum;
		yourself.
	pilot urceniHodnosti.
     
     ^ pilot</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Pilot</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="cisloLicence">cisloLicence
"generated by Daskalos"

     ^cisloLicence</body>

<body package="DaskalosUserClasses" selector="cisloLicence:">cisloLicence: anObject
"generated by Daskalos"

     cisloLicence := (self checkValue: anObject forVariable: #cisloLicence)</body>

<body package="DaskalosUserClasses" selector="hodnost">hodnost
"generated by Daskalos"

     ^hodnost</body>

<body package="DaskalosUserClasses" selector="hodnost:">hodnost: anObject
"generated by Daskalos"

     hodnost := (self checkValue: anObject forVariable: #hodnost)</body>

<body package="DaskalosUserClasses" selector="licenceOd">licenceOd
"generated by Daskalos"

     ^licenceOd</body>

<body package="DaskalosUserClasses" selector="licenceOd:">licenceOd: anObject
"generated by Daskalos"

     licenceOd := (self checkValue: anObject forVariable: #licenceOd)</body>
</methods>

<methods>
<class-id>Pilot</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize
"generated by Daskalos"

     super initialize.
     cisloLicence := nil.
     licenceOd := nil.
     hodnost := nil.
</body>
</methods>

<methods>
<class-id>Pilot</class-id> <category>other methods</category>

<body package="DaskalosUserClasses" selector="licenceDo">licenceDo
	"comment stating purpose of message"

	| posledni pristi dnes |
	posledni := licenceOd.
	pristi := posledni addDays: 1825.
	dnes := Date today.
	dnes &lt; pristi ifTrue: [^pristi] ifFalse: [^'Propadla licence!']</body>

<body package="DaskalosUserClasses" selector="urceniHodnosti">urceniHodnosti
	"Na zaklade cisla licence urceni pozice v letadle"

	self cisloLicence &lt; 40000 
		ifTrue: [self hodnost: 'kopilot']
		ifFalse: [self hodnost: 'kapitan']</body>
</methods>


<class>
<name>Pasazer</name>
<environment>Smalltalk</environment>
<super>Osoba</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>cisloDokladuTotoznosti zakoupenaLetenka nastupujeNa </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Pasazer class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#cisloDokladuTotoznosti -&gt; Core.String); add: (#zakoupenaLetenka -&gt; Core.Object); add: (#nastupujeNa -&gt; Core.Object); yourself)</body>
</methods>

<methods>
<class-id>Pasazer class</class-id> <category>initialize-release</category>

<body package="DaskalosUserClasses" selector="jmeno:prijmeni:datumNarozeni:cisloDokladuTotoznosti:">jmeno: jmeno prijmeni: prijmeni datumNarozeni: datum cisloDokladuTotoznosti: cisloDokladu 
	| pasazer |
	pasazer := self new.
	pasazer
		jmeno: jmeno;
		prijmeni: prijmeni;
		datumNarozeni: datum;
		cisloDokladuTotoznosti: cisloDokladu;
		yourself.
	^pasazer</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Pasazer</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="cisloDokladuTotoznosti">cisloDokladuTotoznosti
"generated by Daskalos"

     ^cisloDokladuTotoznosti</body>

<body package="DaskalosUserClasses" selector="cisloDokladuTotoznosti:">cisloDokladuTotoznosti: anObject
"generated by Daskalos"

     cisloDokladuTotoznosti := (self checkValue: anObject forVariable: #cisloDokladuTotoznosti)</body>

<body package="DaskalosUserClasses" selector="nastupujeNa">nastupujeNa
"generated by Daskalos"

     ^nastupujeNa</body>

<body package="DaskalosUserClasses" selector="nastupujeNa:">nastupujeNa: anObject
"generated by Daskalos"

     nastupujeNa := (self checkValue: anObject forVariable: #nastupujeNa)</body>

<body package="DaskalosUserClasses" selector="zakoupenaLetenka:">zakoupenaLetenka: anObject
"generated by Daskalos"

     zakoupenaLetenka := (self checkValue: anObject forVariable: #zakoupenaLetenka)</body>
</methods>

<methods>
<class-id>Pasazer</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize
"generated by Daskalos"

     super initialize.
     cisloDokladuTotoznosti := nil.
     zakoupenaLetenka := nil.
     nastupujeNa := nil.
</body>
</methods>

<methods>
<class-id>Pasazer</class-id> <category>other methods</category>

<body package="DaskalosUserClasses" selector="kupuje:">kupuje: letenku 
	"generated by Daskalos"

	self zakoupenaLetenka: (letenku koupitPro: self)

	"kupuje := (self checkValue: letenka forVariable: #kupuje)"</body>

<body package="DaskalosUserClasses" selector="vek">vek
	"Vrati aktualni vek pasazera"

	| vek |
	vek := Date today year - datumNarozeni year.
	^vek</body>

<body package="DaskalosUserClasses" selector="zakoupenaLetenka">zakoupenaLetenka
	"generated by Daskalos"

	^zakoupenaLetenka</body>
</methods>


<class>
<name>Letenka</name>
<environment>Smalltalk</environment>
<super>DaskalosDataObject</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>cisloLetenky cisloSedadla vstupenkaNa pasazer </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<shared-variable>
<name>Pasazer1</name>
<environment>Letenka</environment>
<private>false</private>
<constant>false</constant>
<category>As yet unclassified</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</shared-variable>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Letenka class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#pasazer -&gt; Core.Object); add: (#cisloLetenky -&gt; Core.String); add: (#vstupenkaNa -&gt; Core.Object); add: (#cisloSedadla -&gt; Core.String); yourself)</body>
</methods>

<methods>
<class-id>Letenka class</class-id> <category>initialize-release</category>

<body package="DaskalosUserClasses" selector="cisloLetenky:vstupenkaNa:">cisloLetenky: letenkaId vstupenkaNa: letadlo

	| letenka |

	letenka := self new.
      letenka cisloLetenky: letenkaId.
      letenka vstupenkaNa: letadlo.

     ^ letenka</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Letenka</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="cisloLetenky">cisloLetenky
"generated by Daskalos"

     ^cisloLetenky</body>

<body package="DaskalosUserClasses" selector="cisloLetenky:">cisloLetenky: anObject
"generated by Daskalos"

     cisloLetenky := (self checkValue: anObject forVariable: #cisloLetenky)</body>

<body package="DaskalosUserClasses" selector="cisloSedadla:">cisloSedadla: anObject
"generated by Daskalos"

     cisloSedadla := (self checkValue: anObject forVariable: #cisloSedadla)</body>

<body package="DaskalosUserClasses" selector="pasazer">pasazer
"generated by Daskalos"

     ^pasazer</body>

<body package="DaskalosUserClasses" selector="pasazer:">pasazer: anObject
"generated by Daskalos"

     pasazer := (self checkValue: anObject forVariable: #pasazer)</body>

<body package="DaskalosUserClasses" selector="vstupenkaNa">vstupenkaNa
"generated by Daskalos"

     ^vstupenkaNa</body>

<body package="DaskalosUserClasses" selector="vstupenkaNa:">vstupenkaNa: anObject
"generated by Daskalos"

     vstupenkaNa := (self checkValue: anObject forVariable: #vstupenkaNa)</body>
</methods>

<methods>
<class-id>Letenka</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize
"generated by Daskalos"

     super initialize.
     cisloLetenky := nil.
     cisloSedadla := nil.
     vstupenkaNa := nil.
     pasazer := nil.
</body>
</methods>

<methods>
<class-id>Letenka</class-id> <category>other methods</category>

<body package="DaskalosUserClasses" selector="cisloSedadla">cisloSedadla
	"generated by Daskalos"

	^cisloSedadla</body>

<body package="DaskalosUserClasses" selector="koupitPro:">koupitPro: pasazera
	"generated by Daskalos"

	| letadlo |
	self pasazer: pasazera.
	letadlo := self vstupenkaNa.
	self cisloSedadla: letadlo priraditSedadlo.
	^self	"vracim zakoupenou letenku"</body>
</methods>


<class>
<name>Letadlo</name>
<environment>Smalltalk</environment>
<super>DaskalosDataObject</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>rokVyroby vlastnik typ obsazeno volnaSedadla naposledyPouzitaCastLetadla vsechnyTypyLetadel posadka let </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<shared-variable>
<name>NaletanoHodin</name>
<environment>Letadlo</environment>
<private>false</private>
<constant>false</constant>
<category>As yet unclassified</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</shared-variable>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Letadlo class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#naposledyPouzitaCastLetadla -&gt; Core.Object); add: (#typ -&gt; Core.Object); add: (#obsazeno -&gt; Core.Number); add: (#vlastnik -&gt; Core.String); add: (#volnaSedadla -&gt; Core.Object); add: (#let -&gt; Core.Object); add: (#rokVyroby -&gt; Core.Object); add: (#posadka -&gt; Core.Object); yourself)</body>
</methods>

<methods>
<class-id>Letadlo class</class-id> <category>rozlozeni</category>

<body package="DaskalosUserClasses" selector="castLetadla">castLetadla

^ #(#radySekcePredek #radySekceStred #radySekceZadek)</body>

<body package="DaskalosUserClasses" selector="vsechnyTypyLetadel">vsechnyTypyLetadel
	| typy |
	typy := Dictionary new.
	typy at: #'Airbus A320' put: 100.
	typy at: #'Boeing 747' put: 170.
	typy at: #'Concorde One' put: 90.
     
      ^ typy</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Letadlo</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="let">let
"generated by Daskalos"

     ^let</body>

<body package="DaskalosUserClasses" selector="let:">let: anObject
"generated by Daskalos"

     let := (self checkValue: anObject forVariable: #let)</body>

<body package="DaskalosUserClasses" selector="naposledyPouzitaCastLetadla">naposledyPouzitaCastLetadla
"generated by Daskalos"

     ^naposledyPouzitaCastLetadla</body>

<body package="DaskalosUserClasses" selector="naposledyPouzitaCastLetadla:">naposledyPouzitaCastLetadla: anObject
"generated by Daskalos"

     naposledyPouzitaCastLetadla := (self checkValue: anObject forVariable: #naposledyPouzitaCastLetadla)</body>

<body package="DaskalosUserClasses" selector="obsazeno">obsazeno
"generated by Daskalos"

     ^obsazeno</body>

<body package="DaskalosUserClasses" selector="obsazeno:">obsazeno: anObject
"generated by Daskalos"

     obsazeno := (self checkValue: anObject forVariable: #obsazeno)</body>

<body package="DaskalosUserClasses" selector="posadka">posadka
"generated by Daskalos"

     ^posadka</body>

<body package="DaskalosUserClasses" selector="posadka:">posadka: anObject
"generated by Daskalos"

     posadka := (self checkValue: anObject forVariable: #posadka)</body>

<body package="DaskalosUserClasses" selector="rokVyroby">rokVyroby
"generated by Daskalos"

     ^rokVyroby</body>

<body package="DaskalosUserClasses" selector="rokVyroby:">rokVyroby: anObject
"generated by Daskalos"

     rokVyroby := (self checkValue: anObject forVariable: #rokVyroby)</body>

<body package="DaskalosUserClasses" selector="typ">typ
"generated by Daskalos"

     ^typ</body>

<body package="DaskalosUserClasses" selector="typ:">typ: anObject
"generated by Daskalos"

     typ := (self checkValue: anObject forVariable: #typ)</body>

<body package="DaskalosUserClasses" selector="vlastnik">vlastnik
"generated by Daskalos"

     ^vlastnik</body>

<body package="DaskalosUserClasses" selector="vlastnik:">vlastnik: anObject
"generated by Daskalos"

     vlastnik := (self checkValue: anObject forVariable: #vlastnik)</body>

<body package="DaskalosUserClasses" selector="volnaSedadla">volnaSedadla
"generated by Daskalos"

     ^volnaSedadla</body>

<body package="DaskalosUserClasses" selector="volnaSedadla:">volnaSedadla: anObject
"generated by Daskalos"

     volnaSedadla := (self checkValue: anObject forVariable: #volnaSedadla)</body>
</methods>

<methods>
<class-id>Letadlo</class-id> <category>other methods</category>

<body package="DaskalosUserClasses" selector="convertIntToString:">convertIntToString: anInteger 
	"konvertuje jeden char na string delky jedna"

	| string |
	string := anInteger printString.
	^string</body>

<body package="DaskalosUserClasses" selector="nahodnyPilot">nahodnyPilot
	"Levny randomizer, protoze funkce #atRandom nefunguje"

	| randomizer |
	randomizer := Timestamp now.
	randomizer := randomizer copy second \\ 5.
	randomizer := randomizer copy + 1.

	^ randomizer</body>

<body package="DaskalosUserClasses" selector="naletanoHodin">naletanoHodin
	"Prumerny pocet naletanych hodin"

	| roky dny veVzduchuHodin |
	roky := Date today year - rokVyroby.
	dny := roky * 365.
	veVzduchuHodin := dny * 7.
	^veVzduchuHodin</body>

<body package="DaskalosUserClasses" selector="naplnenoZProcent">naplnenoZProcent
	| kapacita obsazenostProcenta |
	kapacita := self class vsechnyTypyLetadel at: self typ.
	obsazenostProcenta := kapacita / 100 * self obsazeno.
	^obsazenostProcenta</body>

<body package="DaskalosUserClasses" selector="priraditPosadku:">priraditPosadku: kolekcePilotu 
	"Letadlo je pilotovano kapitanem a kopilotem"

	| kapitani kopiloti zvolenyKapitan zvolenyKopilot |
	kapitani := kolekcePilotu select: [:pilot | pilot hodnost = 'kapitan'].
	kopiloti := kolekcePilotu reject: [:pilot | pilot hodnost = 'kapitan'].
	zvolenyKapitan := kapitani at: self nahodnyPilot.
	zvolenyKopilot := kopiloti at: self nahodnyPilot.
	self posadka: Dictionary new.
	self posadka at: #Kapitan
		put: zvolenyKapitan jmeno , ' ' , zvolenyKapitan prijmeni.
	self posadka at: #Kopilot
		put: zvolenyKopilot jmeno , ' ' , zvolenyKopilot prijmeni</body>

<body package="DaskalosUserClasses" selector="priraditSedadlo">priraditSedadlo
	"priradit sadadlo Letence a pres to Pasazerovi"

	"pouzit prvni cast letadla nebo posledni plnena cast je zadni cast letadla"

	| radaASedadla prirazeneSedadlo pouzitCastLetadla |
	(self naposledyPouzitaCastLetadla isNil or: 
			[(self class castLetadla indexOf: self naposledyPouzitaCastLetadla) 
				= self class castLetadla size]) 
		ifTrue: [pouzitCastLetadla := self class castLetadla at: 1]
		ifFalse: 
			[pouzitCastLetadla := self class castLetadla 
						at: (self class castLetadla indexOf: self naposledyPouzitaCastLetadla) + 1].	"pouzit dalsi cast letadla"
	radaASedadla := (volnaSedadla at: pouzitCastLetadla) associations first.
	"zjisit volne sedadlo"
	prirazeneSedadlo := (self convertIntToString: radaASedadla key) 
				, radaASedadla value first.
	"smazat prirazene sedadlo z volnych sedadel"
	(volnaSedadla at: pouzitCastLetadla) associations first value 
		remove: radaASedadla value first.
	"aktualizovat naposledy pouzitou cast letadla"
	self naposledyPouzitaCastLetadla: pouzitCastLetadla.
	"vraceni prirazeneho sedadla"
	^prirazeneSedadlo</body>

<body package="DaskalosUserClasses" selector="pristiServis">pristiServis
	"Manualni zadavani posledni kontroly letadla, automaticke pocitani data pristiho servisu"

	| posledni udrzba dnes |
	posledni := Date 
				newDay: 4
				monthNumber: 12
				year: 2019.
	udrzba := posledni addDays: 1825.	"Osekany Smalltalk, nejde addMonths ani addYears"
	dnes := Date today.
	dnes &gt; udrzba ifTrue: [^'SERVIS NUTNY!'] ifFalse: [^udrzba]</body>

<body package="DaskalosUserClasses" selector="rozlozeniSedadel">rozlozeniSedadel
	"matice na rozlozeni sedadel v letadle, vzor pro automaticke prideleni podle jinych funkci"

	| kapacitaLetadla predek radySekcePredek radySekceStred konecSekceStred radySekceZadek radaSedadel |
	kapacitaLetadla := self class vsechnyTypyLetadel at: self typ.
	self volnaSedadla: Dictionary new.
	predek := (kapacitaLetadla / 3) floor.	"deleno 3 protoze mame tri oblasti predek, stred a zadek letadla"
	radySekcePredek := Dictionary new.
	radySekceStred := Dictionary new.
	radySekceZadek := Dictionary new.
	konecSekceStred := predek + predek.
	radaSedadel := OrderedCollection new.
	radaSedadel
		add: 'A';
		add: 'B';
		add: 'C';
		add: 'D';
		add: 'E';
		add: 'F';
		yourself.
	"rozlozeni predku letadla"
	1 to: predek do: [:rada | radySekcePredek at: rada put: radaSedadel copy].	"musi se pouzit copy aby kazda rada mela sva sedadla"
	self volnaSedadla at: (self class castLetadla at: 1) put: radySekcePredek.	"#radySekcePredek"
	"stred je stejne velky jako predek ale ma jine rady"
	predek + 1 to: konecSekceStred
		do: [:rada | radySekceStred at: rada put: radaSedadel copy].
	self volnaSedadla at: (self class castLetadla at: 2) put: radySekceStred.	"#radySekceStred"
	"zad letadla je jinak velika nez ostatni sekce"
	konecSekceStred + 1 to: kapacitaLetadla
		do: [:rada | radySekceZadek at: rada put: radaSedadel copy].
	self volnaSedadla at: (self class castLetadla at: 3) put: radySekceZadek	"#radySekceZadek"</body>
</methods>

<methods>
<class-id>Letadlo</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize
"generated by Daskalos"

     super initialize.
     rokVyroby := nil.
     vlastnik := nil.
     typ := nil.
     obsazeno := nil.
     volnaSedadla := nil.
     naposledyPouzitaCastLetadla := nil.
     vsechnyTypyLetadel := nil.
     posadka := nil.
     let := nil.
</body>
</methods>


<class>
<name>Let</name>
<environment>Smalltalk</environment>
<super>DaskalosDataObject</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>kodIATA pristavaNaLetisti vzletaZLetiste vzletaZRunway pristavaNaRunway zemepisnaDelkaMistaPristani zemepisnaSirkaMistaPristani zemepisnaDelkaMistaVzletu zemepisnaSirkaMistaVzletu </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Let class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#vzletaZLetiste -&gt; Core.Object); add: (#posadka -&gt; Core.Object); add: (#zemepisnaSirkaMistaVzletu -&gt; Core.Object); add: (#pristava -&gt; Core.Object); add: (#typ -&gt; Core.Object); add: (#pristavaNaRunway -&gt; Core.Object); add: (#naposledyPouzitaCastLetadla -&gt; Core.Object); add: (#pristavaNaLetisti -&gt; Core.Object); add: (#obsazeno -&gt; Core.Number); add: (#zemepisnaDelkaMistaPristani -&gt; Core.Object); add: (#zemepisnaDelkaMistaVzletu -&gt; Core.Object); add: (#vzletaZRunway -&gt; Core.Object); add: (#volnaSedadla -&gt; Core.Object); add: (#rokVyroby -&gt; Core.Object); add: (#vlastnik -&gt; Core.String); add: (#zemepisnaSirkaMistaPristani -&gt; Core.Object); add: (#vzleta -&gt; Core.Object); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Let</class-id> <category>other methods</category>

<body package="DaskalosUserClasses" selector="souradniceMest">souradniceMest
	"comment stating purpose of message"

	| seznam |
	seznam := Dictionary new.
	seznam at: #PRG
		put: ((Array new: 2)
				at: 1 put: 50.100856;
				at: 2 put: 14.260115;
				yourself).
	seznam at: #CDG
		put: ((Array new: 2)
				at: 1 put: 49.009724;
				at: 2 put: 2.547778;
				yourself).
	seznam at: #JFK
		put: ((Array new: 2)
				at: 1 put: 40.6441666;
				at: 2 put: -73.782222;
				yourself).
	seznam at: #ATL
		put: ((Array new: 2)
				at: 1 put: 32.7790;
				at: 2 put: -96.8087;
				yourself).
	seznam at: #LHR
		put: ((Array new: 2)
				at: 1 put: 51.470020;
				at: 2 put: -0.454295;
				yourself).
	seznam at: #LAX
		put: ((Array new: 2)
				at: 1 put: 33.942791;
				at: 2 put: -118.410042;
				yourself).

	^ seznam</body>

<body package="DaskalosUserClasses" selector="vzdalenost:delka:sirka:delka:">vzdalenost: sirka1 delka: delka1 sirka: sirka2 delka: delka2 
	"K vypoctu je pouzita Haversine vzorec pro vypocet vzdalenosti na kouli na zaklade sirky a delky 2 bodu"

	| vzdalenostSirka vzdalenostDelka delka1Radiany delka2Radiany meziVypocet vzorec polomerZeme |
	polomerZeme := 6378.	" v km"
	"Vzdalenost mezi sirkama a delkama"
	vzdalenostSirka := (sirka2 - sirka1) * Float pi / 180.0.	"sirka1 je start a sirka2 je cil"
	vzdalenostDelka := (delka2 - delka1) * Float pi / 180.0.	"delka1 je start a delka2 je cil"

	"prevod delky do radianu"
	delka1Radiany := sirka1 * Float pi / 180.0.
	delka2Radiany := sirka2 * Float pi / 180.0.

	"Haversine vzorec"
	meziVypocet := (((vzdalenostSirka / 2) sin raisedTo: 2) 
				+ (vzdalenostDelka / 2) sin raisedTo: 2) 
				* (delka1Radiany cos * delka2Radiany cos).
	vzorec := 2 * meziVypocet sqrt arcSin.

	"vracim cely vysledek"
	^vzorec * polomerZeme</body>

<body package="DaskalosUserClasses" selector="vzdalenostMeziStartemACilem">vzdalenostMeziStartemACilem
	"spocita vzdalenost mezi 2 mesty"

	^ self vzdalenost: zemepisnaSirkaMistaVzletu delka: zemepisnaDelkaMistaVzletu sirka: zemepisnaSirkaMistaPristani delka: zemepisnaDelkaMistaPristani</body>
</methods>

<methods>
<class-id>Let</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="pristavaNaLetisti">pristavaNaLetisti
"generated by Daskalos"

     ^pristavaNaLetisti kodIATA</body>

<body package="DaskalosUserClasses" selector="pristavaNaLetisti:">pristavaNaLetisti: anObject
"generated by Daskalos"

     pristavaNaLetisti := (self checkValue: anObject forVariable: #pristavaNaLetisti)</body>

<body package="DaskalosUserClasses" selector="pristavaNaRunway">pristavaNaRunway
"generated by Daskalos"

     ^pristavaNaRunway</body>

<body package="DaskalosUserClasses" selector="pristavaNaRunway:">pristavaNaRunway: anObject
"generated by Daskalos"

     pristavaNaRunway := (self checkValue: anObject forVariable: #pristavaNaRunway)</body>

<body package="DaskalosUserClasses" selector="vzletaZLetiste">vzletaZLetiste
"generated by Daskalos"

     ^vzletaZLetiste kodIATA</body>

<body package="DaskalosUserClasses" selector="vzletaZLetiste:">vzletaZLetiste: anObject
"generated by Daskalos"

     vzletaZLetiste := (self checkValue: anObject forVariable: #vzletaZLetiste)</body>

<body package="DaskalosUserClasses" selector="vzletaZRunway">vzletaZRunway
"generated by Daskalos"

     ^vzletaZRunway</body>

<body package="DaskalosUserClasses" selector="vzletaZRunway:">vzletaZRunway: anObject
"generated by Daskalos"

     vzletaZRunway := (self checkValue: anObject forVariable: #vzletaZRunway)</body>

<body package="DaskalosUserClasses" selector="zemepisnaDelkaMistaPristani">zemepisnaDelkaMistaPristani
"generated by Daskalos"

     ^zemepisnaDelkaMistaPristani</body>

<body package="DaskalosUserClasses" selector="zemepisnaDelkaMistaPristani:">zemepisnaDelkaMistaPristani: anObject
"generated by Daskalos"

     zemepisnaDelkaMistaPristani := (self checkValue: anObject forVariable: #zemepisnaDelkaMistaPristani)</body>

<body package="DaskalosUserClasses" selector="zemepisnaDelkaMistaVzletu">zemepisnaDelkaMistaVzletu
"generated by Daskalos"

     ^zemepisnaDelkaMistaVzletu</body>

<body package="DaskalosUserClasses" selector="zemepisnaDelkaMistaVzletu:">zemepisnaDelkaMistaVzletu: anObject
"generated by Daskalos"

     zemepisnaDelkaMistaVzletu := (self checkValue: anObject forVariable: #zemepisnaDelkaMistaVzletu)</body>

<body package="DaskalosUserClasses" selector="zemepisnaSirkaMistaPristani">zemepisnaSirkaMistaPristani
"generated by Daskalos"

     ^zemepisnaSirkaMistaPristani</body>

<body package="DaskalosUserClasses" selector="zemepisnaSirkaMistaPristani:">zemepisnaSirkaMistaPristani: anObject
"generated by Daskalos"

     zemepisnaSirkaMistaPristani := (self checkValue: anObject forVariable: #zemepisnaSirkaMistaPristani)</body>

<body package="DaskalosUserClasses" selector="zemepisnaSirkaMistaVzletu">zemepisnaSirkaMistaVzletu
"generated by Daskalos"

     ^zemepisnaSirkaMistaVzletu</body>

<body package="DaskalosUserClasses" selector="zemepisnaSirkaMistaVzletu:">zemepisnaSirkaMistaVzletu: anObject
"generated by Daskalos"

     zemepisnaSirkaMistaVzletu := (self checkValue: anObject forVariable: #zemepisnaSirkaMistaVzletu)</body>
</methods>

<methods>
<class-id>Let</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize
"generated by Daskalos"

     super initialize.
     kodIATA := nil.
     pristavaNaLetisti := nil.
     vzletaZLetiste := nil.
     vzletaZRunway := nil.
     pristavaNaRunway := nil.
     zemepisnaDelkaMistaPristani := nil.
     zemepisnaSirkaMistaPristani := nil.
     zemepisnaDelkaMistaVzletu := nil.
     zemepisnaSirkaMistaVzletu := nil.
</body>
</methods>


</st-source>
